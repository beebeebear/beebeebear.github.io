<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on 小狗熊</title>
        <link>https://beebeebear.github.io/post/</link>
        <description>Recent content in Posts on 小狗熊</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>BeeBear</copyright>
        <lastBuildDate>Fri, 28 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://beebeebear.github.io/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>周周有录像 | 202502二期周刊狗</title>
        <link>https://beebeebear.github.io/p/%E5%91%A8%E5%91%A8%E6%9C%89%E5%BD%95%E5%83%8F-202502%E4%BA%8C%E6%9C%9F%E5%91%A8%E5%88%8A%E7%8B%97/</link>
        <pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://beebeebear.github.io/p/%E5%91%A8%E5%91%A8%E6%9C%89%E5%BD%95%E5%83%8F-202502%E4%BA%8C%E6%9C%9F%E5%91%A8%E5%88%8A%E7%8B%97/</guid>
        <description>&lt;img src="https://beebeebear.github.io/p/%E5%91%A8%E5%91%A8%E6%9C%89%E5%BD%95%E5%83%8F-202502%E4%BA%8C%E6%9C%9F%E5%91%A8%E5%88%8A%E7%8B%97/20250228weekly.png" alt="Featured image of post 周周有录像 | 202502二期周刊狗" /&gt;&lt;h2 id=&#34;重要信息&#34;&gt;重要信息
&lt;/h2&gt;&lt;h3 id=&#34;博客运营&#34;&gt;博客运营
&lt;/h3&gt;&lt;p&gt;如果不开始写的话就永远不会开始了，从周刊做起！ &lt;del&gt;（掩盖2月份结束前说好要引进友链以及评论区结果一眨眼已经来到3月的事实，是的精妙的犯罪手法往往就是这样）&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;码字进度&#34;&gt;码字进度
&lt;/h3&gt;&lt;p&gt;每天真的平均100字这样……（吹口哨）强烈的感觉到摄入量不足，就很难吐出好的东西 &lt;del&gt;（于是向摸鱼走去）&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;炼代码情况&#34;&gt;炼代码情况
&lt;/h3&gt;&lt;p&gt;回到最初的起点决定再跟JAVASE斗争一番，接下来为了我的精神状况考量先去看点被万人唾弃的粗制滥造小游戏制作，令人激动的前瞻来了：哪个小幸运儿将会陪伴小狗熊一起经受折磨呢？&lt;/p&gt;
&lt;h3 id=&#34;练洋文时长&#34;&gt;练洋文时长
&lt;/h3&gt;&lt;p&gt;隔三岔五断断续续地有在听，复健效果看着还行已经稍微摆脱听到洋文就想捂着耳朵逃跑的应激状态，配合上翻译插件（kiss-translator）也敢阅读一些简单的纯英文页面，已经即将步入3月份，各个考试的报名也接踵而来，该是时候给自己增压了（阴险地）。&lt;/p&gt;
&lt;h2 id=&#34;书影音游&#34;&gt;书影音游
&lt;/h2&gt;&lt;h3 id=&#34;女子推理社到现在是全2季&#34;&gt;《女子推理社》（到现在是全2季）
&lt;/h3&gt;&lt;p&gt;满分99⭐&lt;/p&gt;
&lt;p&gt;官方介绍：首档全女性剧式沉浸推理节目，6位嘉宾组成女子推理团，沉浸式融入职场生活，节目以单期解谜和长线剧情，连载式双维推进，逐步解锁，推理真相。&lt;/p&gt;
&lt;p&gt;类型/演出风格：【综艺】类型的【悬疑剧】，和往年推出的推理节目稍微不同的是这个会用1整季讲述一个相对完整的故事，从整体来看所有季度连在一起应该是一个大型世界观。&lt;/p&gt;
&lt;p&gt;去除登味（满分40⭐，≥1次该部分分值即为0）：无登味，从片尾曲来看有不少女编剧负责，放在国内大环境下算是比较舒适的一档节目，从一些寄予厚望的角度这一部分我会给到35⭐。&lt;/p&gt;
&lt;p&gt;剧情大纲（含世界观、角色、情节，满分9⭐）：想铺大棋做一个完整巨大世界观是很多作品想做的，尤其是前期很多设定没有爆出的时候给观众下大棋的感受是较为容易的，但一个不好很容易崴脚，如今只上线了2部，根据从现有剧情推测的整个世界观描述可能不到1/3，从这两季给出的答案来看，世界观保守1⭐，精彩的女角色们我愿意给出3⭐，情节只要不作妖后期应该也能保持2⭐，因此这部分我将给出6⭐。&lt;/p&gt;
&lt;p&gt;实际故事节奏（满分20⭐）：实际的观感和剧情大纲较为相符，这点其实是很不容易的，有太多作品剧情大纲能看甚至很厉害的样子但实际观感不知所云也即5分钟带你看XX可能能给出8⭐高分但自己去看只想给零蛋。整体的节奏我会给出合格到良好之间的星星，NPC的演技也可圈可点，考虑到这档节目本质是综艺，剧情之外更多观众其实是冲着女嘉宾互动来的，女嘉宾互动环节看到就是赚到，但和故事互动性上稍有欠缺，综合来看我认为给出7⭐+6⭐=13⭐比较合适。&lt;/p&gt;
&lt;p&gt;服化道（满分10⭐）：考虑到本质是综艺，第一季新媒体公司主题还没有太大突兀的地方，但第二季的服务业酒店主题嘉宾们前期稍微穿了下工装，中后期再也没有所谓工装的设定，难免会让人有些出戏，但就剧情而言太沉浸或许也不是好事？NPC们的服装都有好好的在设计。这部分将分为2部分，对嘉宾和NPC的，2⭐+5⭐=7⭐。&lt;/p&gt;
&lt;p&gt;物有所值度（所耗费的金钱、时间成本是否与作品所给予观众的成正比，满分10⭐）：每一季有12集的内容，同时1集分为上下两集，每1集时长约3小时，加上各种小番外，每一季的时长大约在40小时上下，实话实说里面有很多纯解谜、纯聊天的内容我是跳过的，这种比较轻松的环节显然是为了让观众当下饭菜来看，但是对于更看重剧情的我来说可能就不是很在意，不过别忘了，它本质是综艺。这部分我给出7⭐。&lt;/p&gt;
&lt;p&gt;最终评分：35⭐+6⭐+13⭐+7⭐+7⭐=68⭐/99⭐
⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐&lt;/p&gt;
&lt;p&gt;严苛熊的评分结果供参考：&lt;/p&gt;
&lt;p&gt;＜60⭐ = 看了必被创&lt;/p&gt;
&lt;p&gt;60⭐~70⭐ = 比较微妙的分数线，可能会涉及到各个部分综合影响，可能我心中真实分数会高于所给分数也可能低于所给分数，但是在这个分数线就说明我能看下去&lt;/p&gt;
&lt;p&gt;70⭐~80⭐ = 良作，放在一般评价系统可能已经是优质作品的程度，但或许从我看来依旧有可完善角度&lt;/p&gt;
&lt;p&gt;70⭐~80⭐ = 几乎完美，在10年后的一天我或许会在毫不相干的话题突然说：你看过XX吗&lt;/p&gt;
&lt;p&gt;90⭐~99⭐ = 无可挑剔，不禁怀疑此生还能不能再看到这样的作品，今后的每一天我都会装作不经意的提起它试图拉人入坑&lt;/p&gt;
</description>
        </item>
        <item>
        <title>技巧 | 小狗熊学大编程继续行进中熊</title>
        <link>https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E5%B0%8F%E7%8B%97%E7%86%8A%E5%AD%A6%E5%A4%A7%E7%BC%96%E7%A8%8B%E7%BB%A7%E7%BB%AD%E8%A1%8C%E8%BF%9B%E4%B8%AD%E7%86%8A/</link>
        <pubDate>Sat, 22 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E5%B0%8F%E7%8B%97%E7%86%8A%E5%AD%A6%E5%A4%A7%E7%BC%96%E7%A8%8B%E7%BB%A7%E7%BB%AD%E8%A1%8C%E8%BF%9B%E4%B8%AD%E7%86%8A/</guid>
        <description>&lt;img src="https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E5%B0%8F%E7%8B%97%E7%86%8A%E5%AD%A6%E5%A4%A7%E7%BC%96%E7%A8%8B%E7%BB%A7%E7%BB%AD%E8%A1%8C%E8%BF%9B%E4%B8%AD%E7%86%8A/Program.png" alt="Featured image of post 技巧 | 小狗熊学大编程继续行进中熊" /&gt;&lt;p&gt;⚠考虑到这个其实可能是敏感话题，严肃些说，全文归根结底只是小编熊在一堆混乱的信息流中摸索的经验之谈（并且连载中随时可能推翻重写），有不恰当之处请友好讨论，没有谁出生就是专家，但是有熊出生就是暴君，小编会斩立决不友好的人，感谢配合。&lt;/p&gt;
&lt;h2 id=&#34;1会不会有点意识流了&#34;&gt;1会不会有点意识流了
&lt;/h2&gt;&lt;p&gt;在（主动）误入Obsidian的坑后，自然而然熟悉了一些markdown语法，并且开始鼓捣（抄）一些插件——毕竟Obsidian本质就是洋娃娃换装游戏？！你需要给只有骨骼的小人安好肉和皮并且给小人穿上好看舒适的衣服&lt;font size=&#34;1&#34;&gt;（这换装游戏正经吗）&lt;/font&gt;——鼓捣鼓捣着，Obsidian作为我的半自动智能管家稍微把之前一团乱麻的生活变成了半团乱麻，但依旧太乱了，其实我们都知道整理乱桌子不如再找一张新桌子开始新的生活，呃听上去有点掩耳盗铃，但如果人性不如此吃着碗里的看着锅里的人类社会经济要怎么运行起来呢，意思是我看中了网友的建站教程。&lt;/p&gt;
&lt;p&gt;那个时候一切知识都是新奇的，意思是一点都看不懂，主机是什么，vps是什么，web是什么，css是什么三件套是什么，你们为什么经常这种“你懂的”语气，我要从哪来又要到哪去？&lt;/p&gt;
&lt;p&gt;每一个知识点都会引出一串新的名词，在知识的大海里我感到的不是捉到一个个美丽贝壳的惊喜，而是无尽的焦虑。&lt;/p&gt;
&lt;p&gt;一气之下我决定——不如就彻底来直面深渊，不是它死就是我亡。（也没这么热血）&lt;/p&gt;
&lt;p&gt;好吧归根结底只是我的大脑实在无法理解一个个无序的片段。&lt;/p&gt;
&lt;p&gt;还有一点是程序员是公认的靠技术赚钱的行业而且不像其它技术多数需要线下有师傅带甚至需要一些家族血缘关系，至于前景，瘦死的骆驼比马大总比〇〇业好——对，我缺钱。&lt;/p&gt;
&lt;p&gt;初心一开始只是为了建站吧……？但是现在这一刻起初心变成了，转行。&lt;/p&gt;
&lt;h2 id=&#34;2互联网怎么不互联&#34;&gt;2互联网怎么不互联
&lt;/h2&gt;&lt;p&gt;都说互联网好，确实是好的，但如今“日记”着实有点多，大家本质是在记自己的日记，对于我个外人来说很难看懂，免费的还真就是最贵的，但是我也没钱找专人辅导，就导致在这个过程中花了不少探索的时间，只是为了找条入门学习路线。&lt;/p&gt;
&lt;p&gt;毕竟，真的，门也太多了。&lt;/p&gt;
&lt;p&gt;c++、java、python……看着就头晕眼花的语言，找着找着又听网友说什么操作系统计算机网络原理软件工程是必修课，又说现在你只学语言和这些可不够现在都是全栈工程师了什么前后端对了对了再加上人工智能可不能不学呀不然你就要被时代抛弃啦，然后我简单算了算，再过20年我应该能将将入门，敬请期待吧。&lt;/p&gt;
&lt;p&gt;……我说等一下。&lt;/p&gt;
&lt;p&gt;不对吧，这是入门还是入坟呢。这句话虽然常被人挂在嘴上但多数是调侃，你们来真的？&lt;/p&gt;
&lt;p&gt;于是我想，是不是方向错了。方向比努力更重要就像我鼓捣了3天的Git命令最后发现在Github Desktop上就鼠标点点的事。（希望你会听懂这个有点残酷的黑色幽默小笑话）&lt;/p&gt;
&lt;p&gt;我不需要那么精细的学习，就像我落笔写字的时候也没有说我必须通读全世界经典并且融会贯通才有写字的资格吧。如果真是这样，咱们臭码字的地位也不会——（下略）&lt;/p&gt;
&lt;p&gt;我尽量不带恶意地想，或许是我搞错了工具书和工具书的区别，一个是可以跟着操作的，一个是类似于字典其实更适合查漏补缺的。&lt;/p&gt;
&lt;p&gt;后来我再一想，其实这些问题都可以通过外包解决，也就是报班，市面上的编程课还是比较成熟的，指对科班有科班的卖课，对转码有转码的卖课，在速成就业上还是有套方法以及一般还是会和一些公司招聘有资源交换，可能甄别也不太好甄别的是报班之后这个团队靠不靠谱不仅指带课的老师还有后续的运营人员，但自己探索也会遇到无数坑，人生就这样！如果你已经报班了，那就听机构的，毕竟钱已经花出去了，相信钱的选择。&lt;/p&gt;
&lt;p&gt;但是我也说了我没钱，这也是问题所在。&lt;del&gt;（希望看到这句话的金主妈妈做出一些重要的决定比如说资助我领养我〇养我之类的）&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;在找了一堆所谓的入门素材后我发现脑子越来越乱，尤其是不同的博主都有自己的见解以及卖课的课程，以及我想到一个问题，我毕竟不是科班的，要不我们来看看科班学了些什么参考一下，于是在浏览了数份国内外的大学课程设置之后我先关闭了国内的。&lt;/p&gt;
&lt;p&gt;常见的课程安排总是数学如影随形，怎么说，有点违背人性了。（只是因为对数学的恐惧）&lt;/p&gt;
&lt;p&gt;这可能也是为什么字典型的编程工具书会喜欢把数学摆在第一课，因为确实现状也有一定的影响。&lt;/p&gt;
&lt;p&gt;不过数学会是必要的，但我觉得不是现在。&lt;/p&gt;
&lt;p&gt;不过在了解科班学习路径的途中我也了解到一个其实被我忽略的信息，每个专业在这件事上大同小异，即工作前如果要证明自己的专业度，通常办法是，考证书或是打比赛或是自己闯出个名堂。比较遗憾的是比较“亲民”的赛事一般只针对在校学生，毕竟不设置这个规则的话一些富有经验的老手应该会呈碾压之势，同时也说明黑客松也不会是我的首选除非有人想带我但到现在了暂时这群人还没出现 &lt;del&gt;（暗示？！）&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;相对可以实施的可能也就看看通用证书，没想到兜兜转转又回到考试，这大考小考的一生……&lt;/p&gt;
&lt;p&gt;会有人说要不要为了转行去考研408，这个想法不能说危险吧但。&lt;/p&gt;
&lt;p&gt;人生苦短啊。人可以保持激情但是别疯狂，疯狂是不好的。当然，这是针对我自身情况得出的结论，不同情况需另外讨论。&lt;/p&gt;
&lt;p&gt;说回通用证书，别说，还真有，就像工作软件计算机二级Office一样，计算机这边有个【计算机技术与软件专业技术资格（水平）考试】，为什么拿计算机二级举例呢，因为这玩意相当于一个初级考核，证明你确实达到了入门水准，至于你真实水平，是不能仅靠这一个证据来证明的。毕竟人类实在太多了行业竞争大。&lt;/p&gt;
&lt;p&gt;按常见说法即“没有含金量”。&lt;/p&gt;
&lt;p&gt;不过我不是很在乎什么含金量，&lt;del&gt;真正的含金量是ip吧&lt;/del&gt;，这也是我做任何事的决策逻辑，即回过头来看我们需要什么，我需要一个能相对缩短了解计算机这个科目体系花费的时间并且得到一个转行入门的证明。&lt;/p&gt;
&lt;p&gt;当然，从事后看来这依旧不是最佳策略，因为信息不够的原因导致我在稍微算是深入了解软考之后发现它其实更注重理论，所以它能补齐一些我理论欠缺的部分，但是实战部分它是缺少的，而编程实战是很重要的一环，重要到甚至理论后补也没关系（但是前情提要也说了我脑子没办法跳读），这也是计算机这行的卖课为什么可行，而一说到编程大家就说别问库库学语言跟着做项目学完就就业，从某种角度来说确实是的。&lt;/p&gt;
&lt;p&gt;那么接下来我会以优化过后的方式来梳理一个此前没有接触过计算机行业的人怎样相对快速去了解计算机这个专业领域。&lt;/p&gt;
&lt;p&gt;当然，仅供参考。&lt;/p&gt;
&lt;h2 id=&#34;3半路出家的行动策略v10&#34;&gt;3半路出家的行动策略v1.0
&lt;/h2&gt;&lt;h3 id=&#34;31双线并行量力而行&#34;&gt;3.1双线并行，量力而行
&lt;/h3&gt;&lt;p&gt;在上文中熊说到，一边是理论一边是实战，理论部分我依旧还是会以【软考】为例，来说一下我体感相对比较舒适的学习顺序以及我对每部分的个人理解，实战部分简言之即学语言，一般会分成两个路线，【前端】和【后端】，现在常说的一个人当三个人使的全栈意思就是前端+后端 &lt;del&gt;（哦可能还包括产品经理客户经理之类的一个人就是一个组织）&lt;/del&gt; ，人话简单来说前端本质是展示数据的后端是维护数据的。&lt;/p&gt;
&lt;p&gt;说到这里会不会有友友已经晕过去了，那么让我们在这里做个小总结：&lt;/p&gt;
&lt;p&gt;我们需要解决2件事，即理论和实战，理论部分将参考【软考】大纲，实战部分将分为【前端】和【后端】。&lt;/p&gt;
&lt;p&gt;从打工角度以及时间规划角度，实战的优先级高于理论，双线并行当然是最佳，但如果无法同时顾及就先学会抄代码，当然抄代码这里也需要解决1个问题，关于【前端】和【后端】的抉择。&lt;/p&gt;
&lt;p&gt;大致参考的（编程领域真的很多男讲师，这对我这个小众爱好者来说感觉是非常遗憾的，欢迎向熊推荐女讲师非第一性讲师）：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1Bg4y1b7Wx/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java从零基础到做项目（女讲师赵珊珊，在bilibili有自己的账号叫“珊珊不爱唱歌”）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一些官方文档，官方文档对我来说更像字典很适合自查&lt;/p&gt;
&lt;h3 id=&#34;32ctrlcv工程师连载中&#34;&gt;3.2CtrlCV工程师（连载中）
&lt;/h3&gt;&lt;h4 id=&#34;321前端&#34;&gt;3.2.1前端
&lt;/h4&gt;&lt;p&gt;前端的路径相对比较统一而且没什么争论，HTML+CSS+JS，而代码之外更注重的其实是美学的部分。前端和后端能够“分离”其实是人为的，因为理论上来说一个人不应该做那么多事 &lt;del&gt;（不是从人文关怀角度而更多其实是从规避一个员工掌握太多公司信息从而公司被拿捏的角度）&lt;/del&gt; ……&lt;/p&gt;
&lt;h4 id=&#34;322后端&#34;&gt;3.2.2后端
&lt;/h4&gt;&lt;p&gt;现在&lt;strong&gt;国内&lt;/strong&gt;市面上最火爆的毋庸置疑是JAVA，它有一套相对成熟的路线，但缺点是人真的太多了，多到你会JAVA不是优势你不会JAVA可能会是劣势，加上人一多想法就多，于是你就要学越来越多的东西……此外说得比较多的肯定是C++，Python，以及新兴又讨论得比较多的语言GO，关于语言排名可以带着相关关键词在搜索引擎上查找，&lt;strong&gt;关于语言的好与坏其实语言诞生之初都有其相对专攻的用途&lt;/strong&gt;，如果是从打工角度其实不如打开招聘软件做参考，这也是为什么不会推荐新兴但没有人用的语言，因 为 没 有 人 用。&lt;/p&gt;
&lt;h5 id=&#34;java&#34;&gt;JAVA
&lt;/h5&gt;&lt;p&gt;阴差阳错之下我开始鼓捣JAVA，结合后知后觉的开悟浅说一下整个JAVA的学习其实就两部分，一个是基础语法一个是框架（即模板），中间有很长一段时间都会在框架上挣扎因为JAVA这个语言吧，人类需求越来越大框架也在不断推出新品，像近年常提到的框架是【springboot】。&lt;/p&gt;
&lt;p&gt;所以通用路线其实是：&lt;/p&gt;
&lt;p&gt;第一部分：【JAVA基础（也会有课程名叫JAVASE）】→【MYSQL】（放相对永久数据的地方）&lt;/p&gt;
&lt;p&gt;到这里最基础的部分结束，迎来框架部分，第二部分：像这里其实可以灵活调节，因为从产品诞生的顺序来说是【JavaWeb】→【ssm（Spring框架、SpringMVC框架、MyBatis框架）】→【springboot】以及配合【经典项目实战（例如常被调侃的外卖系统、图书系统）】，但实际上JavaWeb里的一些东西在ssm出现后被“淘汰”了，ssm已经被springboot“淘汰”了（用引号是因为有些不是真的淘汰而是精简了），也有人可以接受【springboot】的逻辑所以可以倒着学即【javaweb的层（因为这是最底层的概念还是需要先了解）】→【springboot】→【ssm】→【JavaWeb】，因为逻辑上来说只要你会用springboot就可以开始做项目了，但如果没有办法适应可能还是需要按照上面说的顺序。再继续同样属于第二部分但有些课程会放在第一部分但其实要实际开发一段时间才懂在说什么的【设计模式】【多线程】【并发编程】【数据结构】【JVM】。&lt;/p&gt;
&lt;h5 id=&#34;cc&#34;&gt;C/C++
&lt;/h5&gt;&lt;p&gt;C/C++和其它常说的语言不太一样的一点是其它语言是造车的轮子，而C/C++是造轮子的。&lt;/p&gt;
&lt;p&gt;C和C#和C++的关系有点像……家族关系。由于熊还没正式从这里起步因此只谈这么一点。&lt;/p&gt;
&lt;h3 id=&#34;33理论基础超基础版&#34;&gt;3.3理论基础超基础版
&lt;/h3&gt;&lt;p&gt;软考，全称是【计算机技术与软件专业技术资格（水平）考试】，需要说明的是，就和淘宝存在很多你看不懂的套餐一样，这个证书分了初、中、高三大类，然后其中又细分了数小类，加总起来将近30个小类，是针对不同需要的人群来的，按我们的需求相对符合的是中级的【软件设计师】，对应更高一级的是高级的【系统架构设计师】，高级与初级的最大区别其实是多出一个写800字论文环节……&lt;/p&gt;
&lt;p&gt;顺带一提关于熊做真题的逻辑，首先，打印出纸质版，因为每天看手机的时间很长，当然，能适应的也可以用电子版。根据你参加考试的批次留出上一批次的试题，例如参加的是2024年下半年的考试，可以留出2024年上半年的试题放在中后期写，接下来从2023年下半年倒着往前写，这样就算时间不够也能确保你先把最重要的事情做了；选择题和客观题穿插着写，选择题可以一套一套做因为你理论上已经把知识点全过了一遍，没有可以蒙的主观题按【模块】练，而且优先练习不熟悉的部分。&lt;/p&gt;
&lt;p&gt;大致参考的（比较遗憾的是绝大多数都是男讲师，欢迎推荐女讲师非第一性讲师）：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/opus/704090344185135144&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2022年软件设计师学习路线（男讲师，下述各部分路线参考得最多的也是这篇）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/495226768/channel/collectiondetail?sid=371333&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;物理视角通俗讲解编程（男讲师，有点仿油管动画讲解那个意思）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1Bg4y1b7Wx/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java从零基础到做项目（女讲师赵珊珊，在bilibili有自己的账号）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/271977769/video&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;从0到1速通java（男讲师，纯讲基础部分，那个时候还在连载中，前半部分到接口部分我觉得讲得算通俗易懂，后半部分我没看）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV124411k7uV/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;半小时看懂&amp;lt;计算机网络&amp;gt;（男讲师）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1Fv4y1f7T1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深入浅出数据结构（国外男讲师）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/395188578&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;博主：爱上半导体（女博主，各种小科普）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;软件设计师参考书及考试大纲&lt;/p&gt;
&lt;p&gt;《大话设计模式》（男作者，里面的“时代局限性”有点严重）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;——第一部分——&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.计算机系统（感想：计算机常识，涉及到一点点的数学小知识但实际应用中感觉大家会直接用码农专用计算器吧）（涉及到的知识点：硬件结构如CPU/IO/CISC/RISC、计算机内数据的表示及运算也就是进制、性能评测如校验码）&lt;/p&gt;
&lt;p&gt;2.程序设计语言（感想：看似有一点代码但其实一点没有）（涉及到的知识点：汇编、 编译、解释）&lt;/p&gt;
&lt;p&gt;3.数据流图（感想：主观题，等看完所有视频再回过头来看其实这个东西更像特意搞了个一般人能看懂的可视化手册，这很亡羊补牢）（翻了下参考用书，其实属于结构化&lt;strong&gt;开发&lt;/strong&gt;方法里的内容，基本元素：实体、数据存储、加工、数据流）&lt;/p&gt;
&lt;p&gt;4.知识产权（感想：因为只需要了解最基础的法律常识，很宝宝巴士）&lt;/p&gt;
&lt;p&gt;5.数据库（感想：其实感觉更像逻辑题？！跟抄代码阶段说的数据库说有关系吧也有但是这个更多是代码之外的东西，一点点小小数学知识，一点点矩阵，不知道矩阵的花10分钟找个视频看下直到是个啥玩意懂两个矩阵相乘怎么算入门来说已经够够的了）&lt;/p&gt;
&lt;p&gt;6.E-R图（感想：主观题，我的见解同数据流图，亡羊补牢，然而人类补牢一张网没法全补齐于是设计了很多张不同但本质大同小异的网，这很小小人类）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;——第二部分——&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7.(1)一门后端语言的基础知识（因为这个讲师选的JAVA于是我就用的JAVA，而近几年客观题都会考python知识，然后主观题4算法题是JAVA/C++二选一，因此语言是逃不过的？！最早期建议还是只选一个，不要学杂了……）&lt;/p&gt;
&lt;p&gt;7.(2)面向对象（感想：等基础打好了再回来看应试的考点你会发现……至少能看懂在说什么了）（涉及到的知识点：类、对象、方法重载、封装、继承、多态）&lt;/p&gt;
&lt;p&gt;8.UML统一建模语言（亡羊补牢三度袭来）&lt;/p&gt;
&lt;p&gt;9.UML-用例图（主观题）&lt;/p&gt;
&lt;p&gt;10.设计模式（感想：如果之前的代码知识打好基础了，这一部分就不会那么折磨，惨痛的教训之小编熊因为没能悟到这一块想要理解其逻辑应该回到打代码本身因此卡了2个月，而设计模式人话版就是因为各种情况各种需求大差不差，于是就有人开始公式答题了，代公式就是快（等），然后人类搞出来了&lt;strong&gt;26种模板&lt;/strong&gt;，其实设计模式更多是工作几年之后才能理解到其中好处的东西（网友自己说的））&lt;/p&gt;
&lt;p&gt;11.设计模式（主观题，如果没有自己打过代码可能会看着很抽象，所以打代码是逃不过的）&lt;/p&gt;
&lt;p&gt;12.操作系统（一堆概念）（涉及到的知识点：进程、存储……）&lt;/p&gt;
&lt;p&gt;13.结构化开发（感想：设计原则，说明开发过程中一些原则，内聚啊耦合的，主要是翻译不说人话！）&lt;/p&gt;
&lt;p&gt;14.软件工程（涉及到的知识点：软件开发过程各种模型、测试方法、维护）&lt;/p&gt;
&lt;p&gt;15.信息安全（感想：经常上网的人应该可以减轻很多阅读门槛，主要核心内容即人类在线下斗，在线上也要斗……）（涉及到的知识点：防火墙、病毒、网络攻击、网络安全）&lt;/p&gt;
&lt;p&gt;16.计算机网络（感想：协议的部分在我看来很抽象……）（涉及到的知识点：协议簇、命令……）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;——第三部分——&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;17.数据结构（感想：从这里开始聚焦于数学题………………建议油管上找到印度姐印度哥讲师配合着看）（涉及到的知识点：链表、栈、队列、树、图……）&lt;/p&gt;
&lt;p&gt;18.算法（感想：看算法的过程中熊基本处于一种大脑放弃思考的状态，但是基础知识看得懂的就记住，原理不难？！&lt;strong&gt;本质就是人类想省钱省时间&lt;/strong&gt;，人类真爱折腾啊……算法部分在客观题主观题都有，同理，建议油管上找到印度姐印度哥讲师配合着看）&lt;/p&gt;
&lt;h3 id=&#34;34习惯问题&#34;&gt;3.4习惯问题
&lt;/h3&gt;&lt;p&gt;惨痛的教训之1：一定要跟着动手，无论是理论考试的应试还是抄代码，只用眼睛看你是真的不知道大脑多能欺骗你的。&lt;/p&gt;
&lt;p&gt;之2：完美遵循计划很难（对我来说），但是需要大概估计出来2个重要时间：1.你一天能真正为这件事专注的时间是多久（以小时计）2.你一个月大概能为这件事腾出多少时间。因为以视频教学我们需要花费的时间是相对客观的（如果你选择了看书那么可能需要以x页或章/次来计算），战线拖得越长心理防线越容易被击溃而且大脑机制就是会清除掉你不常用的知识，因此我们需要先估计出一个大概的时间。要注意的可能是即便视频1.5倍速播放（我习惯1.5倍速），最好是按照视频原长度统计，因为你做笔记要时间，理解也要时间。&lt;/p&gt;
&lt;p&gt;之3：不要想着一个视频一次搜索就能解决我们的小问号，在各种抽象概念的接连袭来下问号很多是很正常的，多用搜索引擎，不抗拒AI的多去折磨GPT，AI作为数据库太好用了，而且你问题再多再小白它也不会骂你，当然它可能“骗”你所以得到解答之后我们要去验证。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>周周有录像 | 202502一期周刊狗</title>
        <link>https://beebeebear.github.io/p/%E5%91%A8%E5%91%A8%E6%9C%89%E5%BD%95%E5%83%8F-202502%E4%B8%80%E6%9C%9F%E5%91%A8%E5%88%8A%E7%8B%97/</link>
        <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://beebeebear.github.io/p/%E5%91%A8%E5%91%A8%E6%9C%89%E5%BD%95%E5%83%8F-202502%E4%B8%80%E6%9C%9F%E5%91%A8%E5%88%8A%E7%8B%97/</guid>
        <description>&lt;img src="https://beebeebear.github.io/p/%E5%91%A8%E5%91%A8%E6%9C%89%E5%BD%95%E5%83%8F-202502%E4%B8%80%E6%9C%9F%E5%91%A8%E5%88%8A%E7%8B%97/20250216weekly.png" alt="Featured image of post 周周有录像 | 202502一期周刊狗" /&gt;&lt;h2 id=&#34;重要信息&#34;&gt;重要信息
&lt;/h2&gt;&lt;h3 id=&#34;博客运营&#34;&gt;博客运营
&lt;/h3&gt;&lt;p&gt;&lt;font size=5&gt;本周博客诞生了！！！&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;其中的辛酸都融在并不详细的两篇博文里了……&lt;/p&gt;
&lt;h3 id=&#34;码字进度&#34;&gt;码字进度
&lt;/h3&gt;&lt;p&gt;怎么会是……0呢。（佯装惊讶）&lt;/p&gt;
&lt;h3 id=&#34;炼代码情况&#34;&gt;炼代码情况
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;依旧在和框架战斗&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有种誓不罢休的钻牛角尖感……再试试，扫了眼别的语言，感觉就JAVA最荒谬，这不是我的错觉吧……&lt;/p&gt;
&lt;h3 id=&#34;练洋文时长&#34;&gt;练洋文时长
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;我可以找借口吗&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;加起来听了30分钟……？&lt;/p&gt;
&lt;p&gt;——指一整周&lt;/p&gt;
&lt;p&gt;小狗熊啊小狗熊，引以为戒！&lt;/p&gt;
&lt;h2 id=&#34;大事件回顾&#34;&gt;大事件回顾
&lt;/h2&gt;&lt;p&gt;1.那必然是&lt;font size=5&gt;搭博客！！！&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;2.以及在试图折腾Obsidian上又有新想法，进度条折腾3小时最后用回原版……中途试着用了GPT来指导，但如果看不懂代码是没有办法真的去挖掘问题到底出在哪的，这个时候就展现出了人工的优越性（？！）。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>技巧 | 让你见识见识真正的新手小白熊之力吧之Hugo&#43;GitHub搭建静态博客稍微全自动篇熊</title>
        <link>https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%A8%8D%E5%BE%AE%E5%85%A8%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/</link>
        <pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%A8%8D%E5%BE%AE%E5%85%A8%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/</guid>
        <description>&lt;img src="https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%A8%8D%E5%BE%AE%E5%85%A8%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/BlogBuild2.png" alt="Featured image of post 技巧 | 让你见识见识真正的新手小白熊之力吧之Hugo&#43;GitHub搭建静态博客稍微全自动篇熊" /&gt;&lt;p&gt;⚠️上半篇推荐的手把手教学视频可能因为时效性，作者的最后一个视频自动部署方案现在跟着操作会有点（很大）问题，当然，原理其实是一致的，故本篇会尽量详细描述整个自动部署的原理和过程。&lt;/p&gt;
&lt;p&gt;需要说明吗：下文的英文没有一个词是我拽洋文，均是页面上会显示的原文。&lt;del&gt;最烦装〇的人！&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;前情提要&#34;&gt;前情提要
&lt;/h2&gt;&lt;p&gt;书接上回，我们建的第一个&lt;strong&gt;公开&lt;/strong&gt;仓库repository已经成功上线，现在在准备好博文内容之后要达到线上主页更新的目标需要【2】个步骤：&lt;/p&gt;
&lt;p&gt;1.hugo指令&lt;code&gt;hugo -D&lt;/code&gt;生成最新的public文件夹；&lt;/p&gt;
&lt;p&gt;2.将public文件夹上传至Github仓库。&lt;/p&gt;
&lt;p&gt;本文的目标是简述及简化上述两个步骤。&lt;/p&gt;
&lt;h2 id=&#34;策略之github-action--github-desktop&#34;&gt;策略之GitHub Action + GitHub Desktop
&lt;/h2&gt;&lt;p&gt;方案总述：一个是&lt;strong&gt;公开&lt;/strong&gt;仓库后续放public文件，一个是&lt;strong&gt;建议私有&lt;/strong&gt;的仓库包含你的博文源文件，利用GitHub Action自动化生成Public文件并让私有仓库和公开仓库连接，GitHub Desktop本地管理仓库并简化Git指令上传有改动的文件。&lt;/p&gt;
&lt;h3 id=&#34;私有仓库建立&#34;&gt;私有仓库建立
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;小贴士：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.仓库名Repository name以见名知意为佳，例如Bear(博客名)HugoBlogSource。&lt;/p&gt;
&lt;p&gt;2.跟我们上一步建立公开仓库唯一区别就是可见选择&lt;strong&gt;Private&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;github-action使用&#34;&gt;GitHub Action使用
&lt;/h3&gt;&lt;p&gt;我们的自动化依赖一段代码完成，而第一步是要给权限。（官方说法叫“GitHub 提供一个令牌Token，可用于代表 GitHub Actions 进行身份验证。”）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置Token&lt;/strong&gt;具体操作：打开GitHub，点开个人界面的&lt;strong&gt;Settings&lt;/strong&gt;，往下翻翻到&lt;strong&gt;Developer Settings&lt;/strong&gt;，有一个钥匙图标Personal access tokens (classic)，点进其中的Tokens (classic)，点击Generate new token (classic)，备注Note随便取建议取你能看得懂的，到期时间Expiration选择&lt;strong&gt;No expiration&lt;/strong&gt;（否则你隔个十天八天的还要回来重新给权限），勾选&lt;strong&gt;repo&lt;/strong&gt;和&lt;strong&gt;workflow&lt;/strong&gt;这两部分。&lt;/p&gt;
&lt;p&gt;注意，生成的那串Token只会显示一次，所以可以自己找个另外的文本文档啥的保存记录一下，否则就只能重新设置。&lt;/p&gt;
&lt;p&gt;因为这段Token会被我们写进接下来的自动化代码文件里，所以我们要在这里再进行一个操作，在我们放源代码的仓库（也就是设置成私有的那个仓库）设置一个Secrets（可以理解为给它穿件衣服） &lt;del&gt;（裸奔是不好的）&lt;/del&gt; 。&lt;/p&gt;
&lt;p&gt;具体操作：点开我们刚刚创建的私有仓库，点开仓库的&lt;strong&gt;Settings&lt;/strong&gt;，找到Security下的&lt;strong&gt;Secrets and variables&lt;/strong&gt;，点进其中&lt;strong&gt;Actions&lt;/strong&gt;，创建一个&lt;strong&gt;New repository secret&lt;/strong&gt;，&lt;strong&gt;Secret&lt;/strong&gt;那个框里粘贴进去刚刚你复制的那串Token，这里的&lt;strong&gt;Name&lt;/strong&gt;建议不要取奇奇怪怪的名字，最好符合全英文+简洁原则，例如我这里写的是&lt;strong&gt;TOKEN&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;下面就到了真正的核心——&lt;strong&gt;自动化代码部分&lt;/strong&gt;，我们回到电脑本地文件夹你存放博客所有文件的位置（像本文就保存在电脑E:\hugo\bear），我们新建一个文件夹”.github“，并在”.github“内创建一个子文件夹”workflows“，我们的自动化代码就放在”workflows“文件夹下，创建一个空白文档，粘贴以下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name: deploy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;on:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  push:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    branches:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - main # 或者是你的源代码分支
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jobs:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deploy:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    runs-on: ubuntu-24.04 # 之前我用这段代码一直有问题网友说可能是因为这个ubuntu的版本问题，所有跟着网友改成了这个版本
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    steps:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - name: Checkout repository
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        uses: actions/checkout@v2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          submodules: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          fetch-depth: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - name: Set up Hugo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        uses: peaceiris/actions-hugo@v2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          hugo-version: &amp;#34;latest&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - name: Build and Deploy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        run: |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          hugo -D
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - name: Deploy to GitHub Pages
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        uses: peaceiris/actions-gh-pages@v3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          PERSONAL_TOKEN: ${{ secrets.TOKEN }} # 你的个人访问令牌
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          EXTERNAL_REPOSITORY: beebeebear/beebeebear.github.io # 你的GitHub Pages仓库,即公开的那个仓库
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          PUBLISH_BRANCH: main # 或者是你的GitHub Pages分支
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          PUBLISH_DIR: ./public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          commit_message: ${{ github.event.head_commit.message }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;小贴士：大部分注释都写在上面了，不确定会不会有友友不知道上面说的源代码分支是指什么，点开你的仓库的&lt;strong&gt;Settings&lt;/strong&gt;，General设置下有个Default branch，这里写了你的分支名，本质就是文件夹名，是可以修改的，我习惯用main，也有些人或者创建时默认是master，如果你的显示是master而且你不想改动，那么就把上面这串代码的main改成master。&lt;/p&gt;
&lt;p&gt;自动化代码作者出处：&lt;a class=&#34;link&#34; href=&#34;https://github.com/peaceiris/actions-hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;actions-hugo&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;github-desktop&#34;&gt;GitHub Desktop
&lt;/h3&gt;&lt;p&gt;喜欢折磨的也可以用Git命令。&lt;/p&gt;
&lt;p&gt;顺带说一下我们新建仓库code页面下create a new repository on the command line里那串命令的意思 &lt;del&gt;（其实是我写都写了不想浪费）&lt;/del&gt; ：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init //创建空的git文件夹
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/beebeebear/bearblogsource.git  //和远程库建立连接，那串https是对应链接
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M main  //当前分支为main分支
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .  //添加所有文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#34;first commit&amp;#34;  //推送，&amp;#34;&amp;#34;内的内容是备注
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main  //推送到远程的main分支上
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;不过按照接下来操作我们应该用不上这串命令了……&lt;del&gt;（谁在狂喜？）&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;其实仓库创建出来提示页面就有个GitHub Desktop下载按钮，当然也可以点击这个官方链接进行下载：&lt;a class=&#34;link&#34; href=&#34;https://desktop.github.com/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Desktop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载安装之后如果你已经登录了GitHub账号（如果您正在按这篇博客跟着做那么应该是登陆状态）可以直接关联然后登录，这里说一下GitHub代码仓库管理的逻辑其实是这样：线上仓库有文件——克隆（下载）文件到本地——本地文件有更新——确认提交更新后的代码&lt;/p&gt;
&lt;p&gt;到这一步，我们现在以及以后需要管理的就只有&lt;strong&gt;私有仓库&lt;/strong&gt;……在这里插入一小步，创建”.gitignore“文件，意思是在上传的时候自动忽略我们这个文件里写的内容，像public文件我们就不需要上传，以及你如果跟着上半篇我推荐的那个视频走，Hugo.exe文件其实也不用上传，”.gitignore“文件位置写在博客文件夹根目录下（例如我的博客文件夹位置E:\hugo\bear，这个文件就写在这里）&lt;/p&gt;
&lt;p&gt;当然也可以不用管”.gitignore“文件，直接梭哈，只是说越简洁在上传的时候能减轻一点网络压力。&lt;/p&gt;
&lt;p&gt;继续以下步骤：GitHub Desktop点进对应私有仓库克隆到本地（我放在了E:\hugo这个文件夹下，主要是我方便管理，&lt;del&gt;我懒&lt;/del&gt;），把我们的源文件扔进去（建议复制不要剪切，既然咱们是新手就要多留心眼，留个原件，这样万一出问题也不至于瞬间回到第一步），这个时候点开GitHub Desktop我们会发现”Changes“那一块多出来很多东西，我们在”Summary“那里写好本次改动的原因（因为是我们自用的博客没有什么规则&lt;del&gt;我比较懒&lt;/del&gt;一直在调试就直接打了test）&lt;strong&gt;commit to main&lt;/strong&gt;，然后确认提交&lt;strong&gt;push origin&lt;/strong&gt;，如果失败了大概率是网不行，换个节点。&lt;/p&gt;
&lt;p&gt;稍等片刻，代码生效（学名叫部署）需要点时间，可以点开仓库的Actions查看部署deploy情况。&lt;/p&gt;
&lt;p&gt;到这一步应该就完成整个的自动化操作了，如果没有，请看下一步。&lt;/p&gt;
&lt;h3 id=&#34;公开仓库检查&#34;&gt;公开仓库检查
&lt;/h3&gt;&lt;p&gt;因为如果你按照上篇操作，在公开仓库你应该已经提交了一次代码，这个时候我们去公开仓库检查一下，有可能出现一种情况，除了跟私有仓库有联系的代码（Code页面每一行提交的文件中间有亮着蓝色的部分例如我这边显示是”beebeebear/xxxxxxx(私有仓库名)@xxxxxxxx(一串数字)“）还出现了部分没有联系的，如果你出现了这样的情况，恭喜你，现在打开GitHub Desktop，按照克隆操作把公开仓库拉到本地，然后把文件清空再上传，相当于把公开仓库清空。&lt;/p&gt;
&lt;p&gt;然后GitHub Desktop再重新回到私有仓库，因为自动化代码触发貌似需要代码有变动，所以这里可以新增一个测试博文文件（\content\post那里），再再再更新上传，来触发代码生效。&lt;/p&gt;
&lt;p&gt;现在应该就能正常打开博客页面了。&lt;/p&gt;
&lt;h3 id=&#34;还有高手&#34;&gt;还有高手？
&lt;/h3&gt;&lt;h4 id=&#34;其一&#34;&gt;其一：
&lt;/h4&gt;&lt;p&gt;如果咱们的源代码只有一点点变动（例如某篇你发现了错别字），事实上你可以直接在Github上改，这也是为什么要上传源代码的原因……？（并不是）当然，不是很推荐这种做法。&lt;/p&gt;
&lt;h4 id=&#34;其二&#34;&gt;其二：
&lt;/h4&gt;&lt;p&gt;心细的友友应该早就察觉，其实新建博文也不一定需要使用hugo命令，第一次它把框架搭好之后我们后续如果只是要新增博文内容，直接拿着以前的文件夹复制粘贴然后修改里面的index.md文件就好了，常用的hugo命令可能是本地调试即&lt;code&gt;hugo server -D&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;其三&#34;&gt;其三：
&lt;/h4&gt;&lt;p&gt;&lt;del&gt;如果搭建中的某一步一直报错，搜索引擎找遍办法也没用，最好的办法就是炸了重来。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;你可能需要的：&lt;/p&gt;
&lt;p&gt;删除仓库的步骤：点进对应仓库Repositories，仓库&lt;strong&gt;Settings&lt;/strong&gt;，划到最下方&lt;strong&gt;Danger Zone&lt;/strong&gt;，&lt;strong&gt;Delete this repository&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;其四&#34;&gt;其四：
&lt;/h4&gt;&lt;p&gt;博客搭建不是一劳永逸的，就像上述的自动化代码，半年前还能用结果半年后就要对应修改了……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是你的博文内容是最核心也是相对最永恒的&lt;/strong&gt;，一切皆可抛，保存好post、保存好post、保存好post（重复三遍），总能换个地方重来。（能不用总是迁徙当然更好！）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>技巧 | 让你见识见识真正的新手小白熊之力吧之Hugo&#43;GitHub搭建静态博客半自动篇熊</title>
        <link>https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%8D%8A%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/</link>
        <pubDate>Mon, 10 Feb 2025 22:58:47 +0800</pubDate>
        
        <guid>https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%8D%8A%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/</guid>
        <description>&lt;img src="https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%8D%8A%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/BlogBuild1.png" alt="Featured image of post 技巧 | 让你见识见识真正的新手小白熊之力吧之Hugo&#43;GitHub搭建静态博客半自动篇熊" /&gt;&lt;p&gt;熊の博客搭建只能用精彩纷呈形容哇&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文章适用于&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;1.跟我一样从未搭建过静态博客且（前端）代码知识几乎为0但又不想花过多时间去了解底层代码知识仅有书写博客内容需求的人；&lt;/p&gt;
&lt;p&gt;2.跟我一样对互联网上教程每一步都有很多小问号问gpt结果问号越来越多本质缺少活人手把手纯手工制作教学的人；&lt;/p&gt;
&lt;p&gt;3.我。&lt;/p&gt;
&lt;h2 id=&#34;1序&#34;&gt;1序
&lt;/h2&gt;&lt;h3 id=&#34;11小想法就像四月的天多变又多变&#34;&gt;1.1小想法就像四月的天，多变又多变
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;今天天气很好很适合一局顶级折磨（）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;起因是家中喜迎一位新成员战66，新嘉宾的到来就促使人想再引进点新的什么这种感觉就像剧情推进世界观逐渐展开一样激动人心？！&lt;del&gt;加上我上这个互联网被创的次数太多了我认为有必要每周每月统合大史记让大家陪我一起痛苦而且这样就能为我的卖课Onlyfans社群铺路哦呵呵呵呵&lt;/del&gt;。之前一直拖着没去鼓捣博客，要不就？&lt;/p&gt;
&lt;p&gt;别说，一个小小的念头让我折腾了三天，&lt;strong&gt;物超所值&lt;/strong&gt;啊！&lt;/p&gt;
&lt;p&gt;虽然说着有无数专门为小白写的教程，但不可避免搭建博客会涉及到很多&lt;strong&gt;专有名词&lt;/strong&gt;，一旦你对其中某种分类某个名词产生好奇，找着找着很容易找偏并强烈打击你的自信心，像是我很久之前为教程文章中提到的vps困扰我说这是什么你们都这么厉害吗人均电脑大师只有我怎么一点都看不懂算了关电脑睡觉还是回归结绳记事吧……你看，这样其实不好因为我们容易迷失在知识的海洋里！&lt;/p&gt;
&lt;p&gt;我们还是需要一个目标来指引我们到目标地点而不是放任自己环球旅行，脑袋里的小问号起源于“为什么它在这”，让我们回到起点，此时无需问“博客是怎么建成的”，这是一个技术需求，而是去解决一个&lt;strong&gt;业务（用户）需求&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;font size=5&gt;博客是怎么出现的？我们为什么要选择它？&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;12没有买卖就没有伤害&#34;&gt;1.2没有买卖就没有伤害？
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;网要笑着玩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上我相信所有技术出现都是基于人类需求，而人类需求不是凭空突然冒出来就像古人不会想哇我们有人工智能的话该多方便幸福呀，技术出现使用——其实互联网技术简称不如说是一堆新兴软件这样我们就不需要面对那么底层的东西——也是会有一个相对符合逻辑循序渐进的过程，所以我默认常见情况如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.你手上有想要发布的东西（也可以没有，但你有这个念想），比如说日记，旅游攻略，游戏技术……&lt;strong&gt;这是你的博客最核心的“内容”&lt;/strong&gt;，你可能以纸质形式保存，也可能放在了本地电脑上已经有了电子文件形式。&lt;/li&gt;
&lt;li&gt;2.你需要把这些东西发布到互联网上——这也是互联网起名之初称为互联网的原因——和网友一起分享，或者说你的需求是更好的留存，总之这离不开互联网。&lt;/li&gt;
&lt;li&gt;3.事实上，将软件极尽简化使用操作，&lt;strong&gt;用户只需要想好想说的内容&lt;/strong&gt;，点击发送不涉及任何别的配置（此处配置指系统配置），现在所有平台都是这样做的，但是也面临一个最大的问题，就像你住在别人家，如果你的行为不符合别人心意，别人可以随时赶你出去。而且就算别人没明说暂时还未采取举动，住在别人家，总有种受制于人的感觉。&lt;/li&gt;
&lt;li&gt;4.那我能不能自己搭房子？令人欣慰的是，有需求的地方就有市场有市场就有买卖有买卖就有伤害……以下涉及到的方案即便有注明免费的但其实本质上还是符合“买卖需求论”（我自己编的词），下文将会尽量说明我们为什么能“免费”获取一些服务免费搭好博客。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;13一点点的搭建工具问答&#34;&gt;1.3一点点的搭建工具问答
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;拿起（闭源）工具我就无法拥抱你，放下（开源）工具我就无法保护你&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;既然我们决定拿好包袱从盖草房开始新生活，关于怎么建房子接下来我们会听到几乎每篇搭建博客教学都绕不开的词，也就是我们盖房子需要的&lt;strong&gt;工具&lt;/strong&gt;们，你是否和我一样会有很多小问号，我默认答案是“是”，接下来会用并不严谨但尽量让无代码经验的友友们听懂为主的语言进行描述，但凡会一点代码懂一点互联网的都不要听直接跳到实操Step1，当然，欢迎指正：&lt;/p&gt;
&lt;h4 id=&#34;131文本编辑器&#34;&gt;1.3.1文本编辑器
&lt;/h4&gt;&lt;p&gt;这里我们选择的是Markdown文本编辑器——支持的软件有Obisidian（&lt;strong&gt;首推&lt;/strong&gt;）、Typora、Vscode（其实这个写代码的才常用）等&lt;/p&gt;
&lt;h5 id=&#34;markdown是什么能吃吗&#34;&gt;Markdown是什么，能吃吗
&lt;/h5&gt;&lt;p&gt;找到一个不知道算不算官方的但比我说的要官方的参考文档&lt;a class=&#34;link&#34; href=&#34;https://www.markdown.cn/docs/intro/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《Markdown中文版参考指南》&lt;/a&gt;，比较书面的解释是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级标记语言，你可以使用它&lt;strong&gt;向纯文本文档添加格式元素&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font size=2&gt; &lt;del&gt;&lt;del&gt;什么轻量重量，哈哈看不懂&lt;/del&gt; &lt;/del&gt;&lt;/font&gt;，但是后半句是重要的，即&lt;strong&gt;向纯文本文档添加格式元素&lt;/strong&gt;。&lt;/p&gt;
&lt;h5 id=&#34;为什么选择markdown好吃吗&#34;&gt;为什么选择Markdown，好吃吗
&lt;/h5&gt;&lt;p&gt;我想大多数已经用上电子设备进行书写的友，如果没有特别需求主动去接触过别的标记语言（如果你从未听过标记语言这个词就适用于本句的“如果”），应该大多聚集于word（只要曾经用过都算）或者一些跟word使用方式大差不差的笔记软件，在&lt;strong&gt;文字&lt;/strong&gt;之外我们还需要关注的一点是&lt;strong&gt;样式&lt;/strong&gt;，例如&lt;/p&gt;
&lt;p&gt;&lt;del&gt;不知道为什么样式没法预览，这里仅写一下markdown添加样式规则，感兴趣的友友在搭建过程中就知道我在说什么了……&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**加粗**
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*倾斜*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 一级标题
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## 二级标题
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;是的，我们以往只需要鼠标或者手指在对应按键上点一点，你就可以很简单的将对应文字修改成我们需要的样式，但问题来了，我们能获得这样的便利实际上也是因为我们交出了部分的自由。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;因为我们依旧还是住在别人家。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以word为例，保存的可编辑的文档格式（.doc）（.docx），一旦我们需要留存、分享，如果只是分享给你的朋友且你的朋友也有Office，但网站不认文档文件，所以当你将精心排版的文字直接粘贴到网站上你会发现—wow，什么都没有发生，一切样式归为虚无只剩一大坨文字，这就是&lt;strong&gt;纯文本&lt;/strong&gt;。当然，也有粘贴过后保留了部分样式但是给你打上了一些你可能看不懂的符号，在此不赘述。&lt;/p&gt;
&lt;p&gt;我们现在可以知道的是word将一切的样式给我们封装（打包）好了，但代价是它作为闭源软件，如果你的内容想要迁移到别家非常不灵活（这也是闭源的意义之一），在这个需求下，我们不必去了解历史上这些工具的变迁，让我们直接来到【总结】部分：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯文本&lt;/strong&gt;网站都能识别，但我们需要&lt;strong&gt;样式&lt;/strong&gt;，且这种添加样式的&lt;strong&gt;规则&lt;/strong&gt;最好不受制于平台、版本，再加上一点，能简单好上手，别忘了，对我们来说博客最重要的部分依旧是我们&lt;strong&gt;博文内容&lt;/strong&gt;而不是搭房子的工具，markdown可以满足我们上述的基本要求，所以我们用它。&lt;/p&gt;
&lt;p&gt;题外话：这个时候或许可以来说说markdown定义中的“轻量”，本篇文章的样式即采用markdown规则，一般需求基本上足够用，但如果你想玩一些更精细的，像是字体颜色、插入图片，就要涉及到html等，但我们现在不必如此心急，等到有需求的时候你自然会去弄懂它的。&lt;/p&gt;
&lt;h5 id=&#34;支持markdown的软件怎么吃&#34;&gt;支持Markdown的软件，怎么吃
&lt;/h5&gt;&lt;p&gt;首推Obsidian除了它能识别.md文本以外还有很多有意思的小功能而且支持多平台加上它开源，更重要的是它简洁，嗯……没有广告。其实如果你没有任何要求你甚至可以在文本文档（.txt）里写，虽然无法识别你写的样式规则……&lt;/p&gt;
&lt;p&gt;考虑到篇幅，关于Obsidian的具体使用操作在本文章不会提及，您可以查询Obsidian的&lt;a class=&#34;link&#34; href=&#34;https://publish.obsidian.md/help-zh/%E7%94%B1%E6%AD%A4%E5%BC%80%E5%A7%8B&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;或者观看一些它人的基础操作教程。&lt;/p&gt;
&lt;h5 id=&#34;markdown基础慢慢吃&#34;&gt;Markdown基础，慢慢吃
&lt;/h5&gt;&lt;p&gt;我依旧建议需求导向，大家可以回想一下你以往在笔记记录软件上用的最多的功能是什么，然后再根据自己需求去网上搜索找实现办法。&lt;/p&gt;
&lt;p&gt;常用的几类样式语法：标题、段落、换行、文字格式、引用、列表、代码、分割线、链接、插入图片，都可以在互联网上轻松找到。&lt;/p&gt;
&lt;h5 id=&#34;我偏不我就要用我习惯的笔记软件我才不要学劳什子markdown我不吃&#34;&gt;我偏不我就要用我习惯的笔记软件我才不要学劳什子Markdown，我不吃
&lt;/h5&gt;&lt;p&gt;机器熊模式：好的。&lt;/p&gt;
&lt;p&gt;有需求的地方就会有新技术，即便这一切其实是绕一个大圈，不过人类不就是这样！（我也经常这样）有相关需求的您可以通过搜索引擎带着相关关键词例如“word转markdown插件”去实现您的需求。以及一些笔记软件也支持分享页面，例如Notion。&lt;/p&gt;
&lt;h4 id=&#34;132博客框架生成&#34;&gt;1.3.2博客框架生成
&lt;/h4&gt;&lt;p&gt;先引入一个浅浅的概念，博客最核心的是我们输入的博文内容没错，但技术层面来说，一个博客实际上还包括了html、css、js、图片、视频……一些乱七八糟的，难道都需要我们亲力亲为？&lt;/p&gt;
&lt;p&gt;而且其中一些操作其实是&lt;strong&gt;固定&lt;/strong&gt;的，是重复性工作，这点很重要。&lt;/p&gt;
&lt;p&gt;懒，是生产动力起源，因此，框架诞生了。（我其实称之为人类的亡羊补牢，因为重复性工作很容易出错，直接给你打包好总不会出错了吧！）&lt;del&gt;（其实还是会）&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;市面上有很多博客框架，本文综合许多因素选择了&lt;strong&gt;Hugo&lt;/strong&gt;，其实就是友友在用说明一定是好东西我也要用，嘿嘿。&lt;/p&gt;
&lt;h4 id=&#34;133服务器&#34;&gt;1.3.3服务器
&lt;/h4&gt;&lt;p&gt;服务器的作用很广，我们需要服务器做的是储存我们的博客文件数据，本篇文章将依托&lt;em&gt;GitHub&lt;/em&gt;解决这个问题。&lt;/p&gt;
&lt;p&gt;注：&lt;em&gt;Github&lt;/em&gt;是什么？人话版，主要面向程序员&lt;strong&gt;存放代码&lt;/strong&gt;的地方，但我们可以用它来搭个博客。&lt;/p&gt;
&lt;h4 id=&#34;134域名ip&#34;&gt;1.3.4域名、ip
&lt;/h4&gt;&lt;p&gt;ip、域名，比较通俗的解释即你需要说明你搭的房子在哪，这样别人才能拿着对应信息来到你家，关于ip稍微深入说一点就会牵扯到很多东西，这并非本文章重点，因此我们只需知道ip是一串数字，而数字对于人类来说并不好记忆，所以人类搞出来了域名，并且开启了一系列关于域名的买卖（下略）。
本文章解决方案将用GitHubPage同时解决ip和域名两个问题，它将给我们分配空间及一个域名。&lt;/p&gt;
&lt;h4 id=&#34;135-小贴士&#34;&gt;1.3.5 小贴士
&lt;/h4&gt;&lt;p&gt;你发现了吗，&lt;strong&gt;服务器&lt;/strong&gt;和&lt;strong&gt;域名&lt;/strong&gt;这部分如果你有更高的要求，像是你想拥有一个自己的服务器，想要一个喜欢的域名，那么就需要动用……小脑瓜，去三方比价（？）动用钞能力。因为这些实际并不是免费的服务，我们实际上是搭了GitHub提供的便利（？）。&lt;/p&gt;
&lt;h2 id=&#34;2一步步开始砌房吧&#34;&gt;2一步步开始砌房吧
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;咦，怎么少了一块？&lt;/p&gt;
&lt;p&gt;一切的（阴暗地爬行） （阴郁地蠕动）（阴森地怪吼）（不分对象攻击）都是从产生这个傲慢想法开始的：&lt;/p&gt;
&lt;p&gt;注册使用三个软件而已你能秒我？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;起初，我决定采用Hugo+GitHub+Vercel（一个自动化把你本地已经搭好的hugo博客框架上传到GitHub的软件我是这样理解的），但没想到惨遭Vercel的拒绝，在一套证明我是人的丝滑验证小连招之后它需要我填写手机号……那我当然是拒绝的，好吧，全自动转半自动，没想到折磨从这里开始……&lt;/p&gt;
&lt;p&gt;在此不详细说明其中曲折而是会&lt;em&gt;一定程度&lt;/em&gt;掰碎揉进下列操作流程中，以小作坊加料形式。&lt;/p&gt;
&lt;h3 id=&#34;21文本编辑器可选&#34;&gt;2.1文本编辑器（可选）
&lt;/h3&gt;&lt;p&gt;因为我已经早早用上Obsidian，所以跳过了这一步。&lt;del&gt;（谁在炫耀？）&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;之所以说（可选）是因为你如果没有任何要求，用文本文档写也可以，只是说不太好看也不太方便预览……&lt;/p&gt;
&lt;p&gt;这里放一下Obsidian官网：&lt;a class=&#34;link&#34; href=&#34;https://obsidian.md/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Obsidian&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&#34;22博客框架hugo&#34;&gt;2.2博客框架Hugo
&lt;/h3&gt;&lt;p&gt;我在这一步受折磨了太久，最后找到了这个真正的手把手教学&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1bovfeaEtQ/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《Hugo + GitHub免费搭建博客，并实现自动化部署》&lt;/a&gt;，作者也给出了对应的文档&lt;a class=&#34;link&#34; href=&#34;https://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《Hugo + GitHub免费搭建博客，并实现自动化部署（文档）》&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;221下载&#34;&gt;2.2.1下载
&lt;/h4&gt;&lt;p&gt;下载Hugo：&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这里默认有跟我一样几乎没正经碰过GitHub的小白，温馨提示，点开&lt;strong&gt;Tags&lt;/strong&gt;，点开后排列顺序从新到旧，&lt;strong&gt;版本号不是越新越好&lt;/strong&gt;，大家能懂我意思吧技术日新月异可能你今天鼓捣出来的东西2年后系统就不支持了，因为我这边一路报错吃了太多的苦，为求稳我选了跟参考视频一样的版本v0.131.0，点开&lt;strong&gt;Downloads&lt;/strong&gt;之后你会看见Assets，这里面一般是作者做了适配不同平台系统的，我们只需要选择其中一个即可，这里选择了hugo_extended_v0.131.0_windows_amd64.zip。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%8D%8A%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/HugoDownloads.png&#34;
	width=&#34;2286&#34;
	height=&#34;1297&#34;
	srcset=&#34;https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%8D%8A%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/HugoDownloads_hu2511933596011662264.png 480w, https://beebeebear.github.io/p/%E6%8A%80%E5%B7%A7-%E8%AE%A9%E4%BD%A0%E8%A7%81%E8%AF%86%E8%A7%81%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%86%8A%E4%B9%8B%E5%8A%9B%E5%90%A7%E4%B9%8Bhugo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%8D%8A%E8%87%AA%E5%8A%A8%E7%AF%87%E7%86%8A/HugoDownloads_hu3402755457993926008.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;pic1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;423px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;建议把Hugo解压缩到你比较顺手的位置，因为我们后续让它生成框架直接在这个文件夹下执行最方便。&lt;/p&gt;
&lt;h4 id=&#34;222搭建博客框架及参数调试&#34;&gt;2.2.2搭建博客框架及参数调试
&lt;/h4&gt;&lt;p&gt;在该文件夹位置cmd调出命令行（如果有不知道命令行的搜索引擎搜一下），想好你要放入博客框架的文件名，这个文件名跟后续我们展示在网页上的没有关系，喜欢取什么就取什么，但也不要取得太奇怪，建议全英文，无特殊字符（!^.@&amp;amp;这些），我在这里取名为bear，在命令行输入&lt;code&gt;hugo new site bear&lt;/code&gt;，就这么简单的一步，它就给我们搭建好了，现在你可以看到多了一个叫做bear的文件夹。&lt;/p&gt;
&lt;p&gt;&lt;font size=5&gt;\小狗熊（本地版）诞生了！/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;……但其实只是创建了核心的博客文件夹并且塞了些基础配置，我们可以点开看，里面绝大多数子文件夹是空的，也就是说我们当前创建了一个网页但是是空壳，接下来才是重头戏：&lt;strong&gt;主题&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;其实感觉有被自身经验及网上说法及翻译误导到，因为按照我以往的经验，主题是锦上添花的东西，但是我误会了一点，我们刚才的那个命令并不包含预设一个主题，它真的是，空的。&lt;/p&gt;
&lt;p&gt;那么就跟着命令行弹出来那一堆12345走，点开它给的下载主题链接，去下载一个主题，这里我极其不推荐之前完全没有鼓捣过博客的友友真就像一堆网上教程说的随便下载一个就好，事实上你把主题下载下来我们还需要进行调试，而且每个主题根据作者的喜好不同配置上肯定会有一些差异，如果你没有任何经验用A主题教学折腾B主题极其有可能疯狂报错即接下来不断的调试预览过程你的页面显示错误，别问，问就是吃过亏了，已删除所有文件重来3次。&lt;/p&gt;
&lt;p&gt;小插曲：其实写主题的作者们为了方便使用者配置，一般会特别放一个exampleSite文件夹，相当于新手包，复制粘贴咔咔一顿就好了，但我最开始下载的主题，没有exampleSite文件夹……对于没法触类旁通的小狗熊来说真是令人摸不着头脑。&lt;/p&gt;
&lt;p&gt;这里我跟着这个贴心小白教程下载了&lt;strong&gt;Stack主题&lt;/strong&gt;，接下来参数调试过程跟着原视频做，加上小熊本阶段也对这部分调试一知半解也还在汲取知识中，就不重复书写了，等到熊能举一反三的时候再拿喜欢的主题来说吧！&lt;/p&gt;
&lt;p&gt;如果到这里你也一路顺利，其实已经成功了80%，歇口气歇口气。&lt;/p&gt;
&lt;h4 id=&#34;223hugo常用指令&#34;&gt;2.2.3Hugo常用指令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;创建新文章：例如我们要创建一篇叫weekly的文章，在你的博客文件夹下，本文章中即指bear，启动命令行，输入命令&lt;code&gt;hugo new content post/weekly/index.md&lt;/code&gt;，一路点开\bear\content\post，事实上我们&lt;strong&gt;所有的博文&lt;/strong&gt;都会放在这（如果你跟着教程一路走来可能我这句话已经说晚了），因此如果后续万一出了什么问题，一切皆可抛，唯一需要记得带上你的&lt;strong&gt;post&lt;/strong&gt;文件夹走。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23村里通网了之github&#34;&gt;2.3村里通网了之GitHub
&lt;/h3&gt;&lt;h4 id=&#34;231git&#34;&gt;2.3.1Git
&lt;/h4&gt;&lt;p&gt;Git原本用法包含了我们实际用法，我们此处只需知道我们需要Git这个中介将我们的博客（本地版）上传到GitHub，这样别人就可以通过链接访问到我们的博客。&lt;/p&gt;
&lt;p&gt;Git官网下载：&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;232github&#34;&gt;2.3.2GitHub
&lt;/h4&gt;&lt;p&gt;Git官网：&lt;a class=&#34;link&#34; href=&#34;https://github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;小贴士：注册账号推荐使用邮箱，不要用国内邮箱（Outlook最好也不要），试手拿着玩的可以用临时邮箱。账号名需要注意，用这个方案我们获取的域名与你的账号名&lt;strong&gt;强联系&lt;/strong&gt;，例如本博客GitHub账号名就是beebeebear，所以取账号名的时候可以稍微留心一下。&lt;/p&gt;
&lt;p&gt;账号建立后跟着教程走建仓库repository，建立&lt;strong&gt;公开&lt;/strong&gt;仓库后续放public文件，实际上&lt;strong&gt;public文件&lt;/strong&gt;就是我们Hugo发功之后最终结果，不涉及源代码，如果你跟我有一样的好奇心，我们点开其中任意文件夹找到index.html这样的文件双击点开，你会发现它实际上已经帮我们生成了一个个独立的页面。&lt;/p&gt;
&lt;p&gt;好了，截至这里，半自动化已完成，流程即：准备好博文内容——hugo指令创建新博文文件夹及基础文件index.md——复制粘贴修改index.md里的内容——hugo指令&lt;code&gt;hugo -D&lt;/code&gt;生成public文件（记得把旧的删掉）——Git指令将public文件上传仓库………………&lt;/p&gt;
&lt;p&gt;……好麻烦啊！&lt;/p&gt;
&lt;p&gt;接下来探索自动化部署，把半自动化升级到全自动。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To Be Continued&lt;/em&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>教学（测试用）</title>
        <link>https://beebeebear.github.io/p/%E6%95%99%E5%AD%A6%E6%B5%8B%E8%AF%95%E7%94%A8/</link>
        <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://beebeebear.github.io/p/%E6%95%99%E5%AD%A6%E6%B5%8B%E8%AF%95%E7%94%A8/</guid>
        <description>&lt;img src="https://beebeebear.github.io/p/%E6%95%99%E5%AD%A6%E6%B5%8B%E8%AF%95%E7%94%A8/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post 教学（测试用）" /&gt;&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;
&lt;h2 id=&#34;headings&#34;&gt;Headings
&lt;/h2&gt;&lt;p&gt;The following HTML &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;—&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; elements represent six levels of section headings. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is the highest section level while &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; is the lowest.&lt;/p&gt;
&lt;h1 id=&#34;h1&#34;&gt;H1
&lt;/h1&gt;&lt;h2 id=&#34;h2&#34;&gt;H2
&lt;/h2&gt;&lt;h3 id=&#34;h3&#34;&gt;H3
&lt;/h3&gt;&lt;h4 id=&#34;h4&#34;&gt;H4
&lt;/h4&gt;&lt;h5 id=&#34;h5&#34;&gt;H5
&lt;/h5&gt;&lt;h6 id=&#34;h6&#34;&gt;H6
&lt;/h6&gt;&lt;h2 id=&#34;paragraph&#34;&gt;Paragraph
&lt;/h2&gt;&lt;p&gt;Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p&gt;
&lt;p&gt;Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.&lt;/p&gt;
&lt;h2 id=&#34;blockquotes&#34;&gt;Blockquotes
&lt;/h2&gt;&lt;p&gt;The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a &lt;code&gt;footer&lt;/code&gt; or &lt;code&gt;cite&lt;/code&gt; element, and optionally with in-line changes such as annotations and abbreviations.&lt;/p&gt;
&lt;h4 id=&#34;blockquote-without-attribution&#34;&gt;Blockquote without attribution
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong&gt;Note&lt;/strong&gt; that you can use &lt;em&gt;Markdown syntax&lt;/em&gt; within a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;blockquote-with-attribution&#34;&gt;Blockquote with attribution
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t communicate by sharing memory, share memory by communicating.&lt;br&gt;
— &lt;cite&gt;Rob Pike&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;tables&#34;&gt;Tables
&lt;/h2&gt;&lt;p&gt;Tables aren&amp;rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Name&lt;/th&gt;
          &lt;th&gt;Age&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Bob&lt;/td&gt;
          &lt;td&gt;27&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Alice&lt;/td&gt;
          &lt;td&gt;23&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;inline-markdown-within-tables&#34;&gt;Inline Markdown within tables
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Italics&lt;/th&gt;
          &lt;th&gt;Bold&lt;/th&gt;
          &lt;th&gt;Code&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;italics&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;bold&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;code&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;A&lt;/th&gt;
          &lt;th&gt;B&lt;/th&gt;
          &lt;th&gt;C&lt;/th&gt;
          &lt;th&gt;D&lt;/th&gt;
          &lt;th&gt;E&lt;/th&gt;
          &lt;th&gt;F&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/td&gt;
          &lt;td&gt;Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex.&lt;/td&gt;
          &lt;td&gt;Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus&lt;/td&gt;
          &lt;td&gt;Proin sit amet velit nec enim imperdiet vehicula.&lt;/td&gt;
          &lt;td&gt;Ut bibendum vestibulum quam, eu egestas turpis gravida nec&lt;/td&gt;
          &lt;td&gt;Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-blocks&#34;&gt;Code Blocks
&lt;/h2&gt;&lt;h4 id=&#34;code-block-with-backticks&#34;&gt;Code block with backticks
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Example HTML5 Document&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;code-block-indented-with-four-spaces&#34;&gt;Code block indented with four spaces
&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;code-block-with-hugos-internal-highlight-shortcode&#34;&gt;Code block with Hugo&amp;rsquo;s internal highlight shortcode
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Example HTML5 Document&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;diff-code-block&#34;&gt;Diff code block
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[dependencies.bevy]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git = &amp;#34;https://github.com/bevyengine/bevy&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rev = &amp;#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;- features = [&amp;#34;dynamic&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ features = [&amp;#34;jpeg&amp;#34;, &amp;#34;dynamic&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;list-types&#34;&gt;List Types
&lt;/h2&gt;&lt;h4 id=&#34;ordered-list&#34;&gt;Ordered List
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;First item&lt;/li&gt;
&lt;li&gt;Second item&lt;/li&gt;
&lt;li&gt;Third item&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;unordered-list&#34;&gt;Unordered List
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;List item&lt;/li&gt;
&lt;li&gt;Another item&lt;/li&gt;
&lt;li&gt;And another item&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;nested-list&#34;&gt;Nested list
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Fruit
&lt;ul&gt;
&lt;li&gt;Apple&lt;/li&gt;
&lt;li&gt;Orange&lt;/li&gt;
&lt;li&gt;Banana&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dairy
&lt;ul&gt;
&lt;li&gt;Milk&lt;/li&gt;
&lt;li&gt;Cheese&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-elements--abbr-sub-sup-kbd-mark&#34;&gt;Other Elements — abbr, sub, sup, kbd, mark
&lt;/h2&gt;&lt;p&gt;&lt;abbr title=&#34;Graphics Interchange Format&#34;&gt;GIF&lt;/abbr&gt; is a bitmap image format.&lt;/p&gt;
&lt;p&gt;H&lt;sub&gt;2&lt;/sub&gt;O&lt;/p&gt;
&lt;p&gt;X&lt;sup&gt;n&lt;/sup&gt; + Y&lt;sup&gt;n&lt;/sup&gt; = Z&lt;sup&gt;n&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Press &lt;kbd&gt;CTRL&lt;/kbd&gt; + &lt;kbd&gt;ALT&lt;/kbd&gt; + &lt;kbd&gt;Delete&lt;/kbd&gt; to end the session.&lt;/p&gt;
&lt;p&gt;Most &lt;mark&gt;salamanders&lt;/mark&gt; are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p&gt;
&lt;h2 id=&#34;hyperlinked-image&#34;&gt;Hyperlinked image
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://google.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://www.google.com/images/branding/googlelogo/1x/googlelogo_light_color_272x92dp.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Google&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;The above quote is excerpted from Rob Pike&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=PAAkCSZUG1c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;talk&lt;/a&gt; during Gopherfest, November 18, 2015.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
